body {
  margin: 0;
  overflow: hidden;
  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande',
    'Lucida Sans', Arial, sans-serif;
}

#PIXI-holder {
  flex: 1 1 auto;
}

#PIXI-holder canvas {
  display: block;
  /* This allows the parent to shrink when the window is resized */
  position: absolute;
}

#underworld-container {
  min-height: 100vh;
  min-width: 100vw;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: fixed;
  top: 0;
}

/* Hide game content and underworld when the menu is open */
body.view-Menu #game-content-holder,
body.view-Menu #underworld-container {
  display: none;
}

/* Hide when the character select screen is open */
body.view-CharacterSelect #game-content-holder,
body.view-CharacterSelect #card-holders {
  display: none;
}

#game-content-holder {
  display: flex;
  align-items: flex-start;
  flex-direction: column;
  height: 100vh;
  pointer-events: none;
  margin: 65px 0 0 8px;
}

.doob-stats {
  margin-top: 70px;
  margin-left: 10px;
}

.floating-text {
  position: absolute;
  transform: translateX(-50%);
  z-index: 1;
  pointer-events: none;
  user-select: none;
}

#vote-level-label {
  text-align: center;
  color: white;
  font-weight: bold;
  font-size: 24px;
  /* Render above pixi */
  z-index: 1;
  position: absolute;
  top: 60px;
  left: 0;
  right: 0;
  pointer-events: none;
}


#upgrade-picker {
  position: fixed;
  justify-content: center;
  flex-direction: column;
  /* Leave room at the top for the menu button */
  top: 35px;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1;
  /* default to hidden */
  display: none;
  background-color: rgba(255, 255, 255, 0.5);
}

body.view-Game.showUpgrades #upgrade-picker {
  display: flex;
}

#upgrade-picker-content {
  justify-content: center;
  align-items: center;
  display: flex;
  pointer-events: all;
}

#upgrade-picker-label {
  text-align: center;
  color: white;
  font-weight: bold;
  font-size: 54px;
  margin-bottom: 12px;
}

#upgrade-picker .card {
  width: 100%;
  max-width: 300px;
  margin: 8px;
}

#upgrade-picker .card-inner {
  height: 500px;
  width: 100%;
}

#upgrade-picker .card-title {
  text-align: center;
  color: white;
}

#upgrade-picker .card-thumb {
  min-height: 180px;
}

body.inspect-mode {
  cursor: help;
}

#inspect-mode-indicator {
  color: white;
  pointer-events: none;
}

#inspect-mode-indicator .hotkey-badge-holder {
  bottom: -28px;
}

body.inspect-mode #inspect-mode-indicator .hotkey-badge-holder {
  bottom: -29px;
}

body.inspect-mode #inspect-mode-indicator .hotkey-badge {
  /* Simulate button being depressed */
  box-shadow: 0 -19px 1px rgba(0, 0, 0, .2) inset, 0 2px 0 0 rgba(255, 255, 255, .7) inset
}

body.inspect-mode #inspect-mode-indicator {
  color: #d5b356;
}

body.inspect-mode #card-inspect {
  display: flex;
}

#card-inspect {
  /*Hidden until inspect-mode reveals it*/
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  pointer-events: none;
  flex-direction: column;
  /* Render over top of card hand */
  z-index: 2;
}

#card-inspect .card-inner {
  width: 300px;
  height: 400px;
  border-width: 8px;
}

#card-inspect .card-inner .card-thumb {
  height: 150px;
}

#card-holders {
  user-select: none;
  display: flex;
  flex-direction: column-reverse;
  z-index: 1;
  position: fixed;
  bottom: -160px;
}


#selected-cards,
#card-holders #card-hand {
  display: flex;
  max-width: 100vw;
  /* leave room for the mana badges at the top */
  padding-top: 15px;
}

#selected-cards {
  padding: 10px;
  /* leave room for the mana badges at the top */
  padding-top: 15px;
  /* Put selected cards next to health and mana */
  position: absolute;
  top: -22px;
  left: 222px;
}

#selected-cards:empty {
  display: none;
}

#card-hand {
  /* This prevents the card-hand from disappearing when all cards are selected */
  min-height: 103px;
  /* Leaves enough room at the bottom to show the hotkey badge */
  padding-bottom: 20px;
  /* Leave room to drag and drop cards to the right */
  padding-right: 300px;
}

#card-hand .card img {
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
}

#selected-cards.hide {
  filter: grayscale(50%);
  opacity: 50%;
}

/* The group of similar cards has a padding the same size as the width of a card inner so that
the face of the last card in the group is seen*/
.card-type-group {
  position: relative;
  width: 140px;
}

.card-type-group:empty {
  padding-right: 0;
  margin-right: 0;
}

.card:hover {
  transform: translate(0, -176px);
  /* Show in front of other cards */
  z-index: 1;
}

.card {
  cursor: pointer;
  position: relative;
  transition: all 0.1s;
  background-image: url('images/card-background.png');
  width: 245px;
  height: 350px;
}


/* CSS to manage drag and drop affordance */
.card .hotkey-badge .dragHandle {
  display: none;
  font-size: 18px;
  font-weight: bold;
  /* cursor: grab to clue users in that they can drag and drop cards */
  cursor: grab;
}

.card:hover .hotkey-badge .key {
  display: none;
}

.card:hover .hotkey-badge-holder {
  bottom: -14px;
}

.card:hover .hotkey-badge .dragHandle {
  display: block;
}

/* END CSS to manage drag and drop affordance */

/* Disable dragging for card thumbnails */
.card img {
  pointer-events: none;
}

#card-holder .card {
  padding: 8px;
  margin: 8px;
  width: 225px;
  height: 350px;
  background-color: white;
  border-radius: 10px 10px;
  pointer-events: all;
  display: flex;
}

.card-badge-holder {
  display: flex;
  position: absolute;
  top: -8px;
  left: -8px;
}

.card-badge {
  width: 24px;
  height: 24px;
  line-height: 24px;
  border-radius: 24px;
  color: white;
  text-align: center;
}

.card-badge.hidden {
  display: none;
}

.card-mana-badge {
  background-color: #5656d5;
  border: 2px solid #3c3c94;
  transform-style: preserve-3d;
}

.card-mana-badge.modified-by-usage {
  border: 2px solid #04042b;
  color: #04042b;
  /* Bumping a modified card-mana-badge to the right 5px
  is a visual trick to make the :before element
  appear to be the original cost */
  left: 5px;
  position: relative;

}

.card-mana-badge.modified-by-usage:before {
  content: "";
  width: 24px;
  height: 24px;
  border: 2px solid #04042b;
  /* translateZ and transform-style:preserve-3d on .card-mana-badge makes sure
  the :before renders behind the regular one */
  transform: translateX(-5px) translateY(0px) translateZ(-1px);
  background-color: #5656d5;
  display: block;
  border-radius: 24px;
  /* Prevents pushing badge label to next line */
  position: absolute;
}

.card-health-badge {
  background-color: #d55656;
  border: 2px solid #d55656;
}

.card-health-badge.modified-by-usage {
  border: 2px solid #522626;
  color: #522626;
}

.jbutton .hotkey-badge-holder {
  bottom: -16px;
}

.hotkey-badge-holder {
  position: absolute;
  bottom: -8px;
  left: 0;
  right: 0;
  margin: 0 auto;
  text-align: center;
}

/* Do not show hotkey badges on already selected cards,
these badges only belong on cards in the hand */
#selected-cards .hotkey-badge {
  display: none;
}

.hotkey-badge:empty {
  display: none;
}

kbd {
  background-color: #eee;
  border-radius: 3px;
  border: 1px solid #b4b4b4;
  box-shadow: 0 1px 1px rgba(0, 0, 0, .2), 0 2px 0 0 rgba(255, 255, 255, .7) inset;
  color: #333;
  display: inline-block;
  font-size: .75em;
  font-weight: 700;
  line-height: 1;
  padding: 2px 4px;
  white-space: nowrap;
}

.card-inner {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.card-thumb {
  /* background-color: rgba(255, 255, 255, 0.3); */
  display: flex;
  justify-content: center;
  align-items: center;
  height: 260px;
}

.card-thumb img {
  width: 64px;
  height: 64px;
}

#card-inspect .card-thumb img {
  width: 128px;
  height: 128px;
  image-rendering: pixelated;
}

.card-title {
  font-size: 24px;
  flex-grow: 3;
  color: #79531c;
  text-align: center;
  text-transform: capitalize;
  white-space: nowrap;
  /* max-height: 30px; */
  /* For new card template */
  padding: 4px;
  height: 18px;
}

#card-inspect .card-title {
  font-size: 30px;
  font-weight: bold;
}

.card-description {
  /* Only shows within card-inspect*/
  display: none;
  flex-grow: 3;
  padding: 8px;
  color: white;
  justify-content: space-between;
  flex-direction: column;
  height: 100%;
}

#upgrade-picker-content .card-description,
#card-inspect .card-description {
  display: flex;
}

#player-turn-indicator-holder {
  text-align: center;
  display: flex;
  justify-content: center;
  background-color: grey;
  user-select: none;
}

#player-turn-indicator-holder>div {
  padding: 8px;
  width: 140px;
}

body.your-turn:not(.showUpgrades) #player-turn-indicator-holder {
  background-color: gold;
}

#menuBtn {
  position: absolute;
  top: 6px;
  left: 6px;
  z-index: 1;
}


body.your-turn #end-turn-btn {
  opacity: 1.0;
}

#end-turn-btn {
  opacity: 0.5;
}

#end-turn-btn.highlight {
  animation: blink-end-turn-animation 1.0s steps(5, start) infinite;
}


@keyframes blink-end-turn-animation {

  0%,
  100% {
    color: black;
    border: 2px black solid;
  }

  50% {
    color: red;
    border: 2px red solid;
  }
}


/* Hide player turn indicator when viewing upgrades
because a user shouldn't see "Your Turn" when looking at upgrades */
body.showUpgrades #player-turn-indicator {
  display: none;
}

#player-turn-indicator {
  display: block;
}

#inspector-tooltip {
  display: flex;
  flex-direction: column;
  justify-content: center;
  pointer-events: none;
  user-select: none;
  z-index: 1;
  display: block;
  position: absolute;
  right: 8px;
  top: 110px;
}

#inspector-tooltip-content {
  white-space: pre-wrap;
}

/* Transform position is determined on hover*/
#inspector-tooltip-container.top {
  top: 64px;
}

#inspector-tooltip-container.bottom {
  bottom: 0;
}

#inspector-tooltip-container.left {
  left: 64px;
}

#inspector-tooltip-container.right {
  right: 0;
}

#inspector-tooltip-container {
  border: 30px solid;
  border-image: url('images/border-diamonds.png') 30 / 1 / 0 stretch;
  /* border-radius: 10px 10px; */
  background-color: rgba(255, 255, 255, 0.7);
  padding: 8px;
  width: 300px;
}

.text-center {
  text-align: center;
}

#health-mana-holder {
  display: flex;
  margin-top: 8px;
}

#ready-state {
  position: absolute;
  bottom: 10px;
  left: 10px;
  z-index: 1;
}

#health-mana {
  display: flex;
  justify-content: center;
  flex-direction: column;
  /* Display above pixi */
  z-index: 1;
}

.health-mana-bar {
  width: 200px;
  height: 32px;
  border-radius: 3px;
  border: 1px solid black;
}

#health,
#mana,
#stamina {
  overflow: hidden;
  position: relative;
}

#stamina {
  height: 16px;
}

#health-mana #stamina .label {
  line-height: 16px;
}

#health-mana .cost {
  position: absolute;
  top: 0;
  height: 100%;
}

#health .cost {
  background: repeating-linear-gradient(45deg,
      rgba(0, 0, 0, 0),
      rgba(0, 0, 0, 0) 10px,
      #984646 10px,
      #984646 20px) fixed;
}

#health .fill {
  background-color: #d55656;
}

#stamina .fill {
  background-color: #d5b356;
}


#mana .fill {
  background-color: #5656d5;
  position: absolute;
}

#mana .cost:nth-child(4) {
  background: repeating-linear-gradient(45deg,
      rgba(0, 0, 0, 0.0),
      rgba(0, 0, 0, 0.0) 10px,
      rgb(49, 40, 180) 10px,
      rgb(49, 40, 180) 20px) fixed;
}

#mana .fill:nth-child(2) {
  background-color: rgb(141, 86, 213);
}

#mana .cost:nth-child(5) {
  background: repeating-linear-gradient(45deg,
      #5656d5,
      #5656d5 10px,
      rgba(0, 0, 0, 0.0) 10px,
      rgba(0, 0, 0, 0.0) 20px) fixed;
}

#mana .fill:nth-child(3) {
  background-color: #4e1172;
}

#mana .cost:nth-child(6) {
  background: repeating-linear-gradient(45deg,
      rgba(0, 0, 0, 0.0),
      rgba(0, 0, 0, 0.0) 10px,
      rgb(141, 86, 213) 10px,
      rgb(141, 86, 213) 20px) fixed;
}

#health-mana .fill {
  height: 100%;
  width: 100%;
  transition: width 0.1s ease;
}

#health-mana .label {
  position: absolute;
  margin: 0 auto;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  text-align: center;
  line-height: 32px;
  color: white;
}

#selected-cards .card {
  position: relative;
}

#selected-cards .card.requires-following-card:last-child:before {
  content: "Requires another spell";
  color: white;
  background-color: rgba(253, 98, 98, 0.596);
  height: 85%;
  margin-top: 5%;
  width: 90%;
  border: 4px red dotted;
  border-left: 0;
  position: absolute;
  left: 70px;
  top: 0;
  display: flex;
  justify-content: center;
  flex-direction: column;
  text-align: center;
  transform: translate3d(0, 0, 0);
}

#selected-cards .card.requires-following-card.blink:last-child:before {
  animation: blink-animation 0.5s steps(5, start) infinite, shake 0.82s cubic-bezier(.36, .07, .19, .97) both;
}

.shake {
  animation: shake 0.82s cubic-bezier(.36, .07, .19, .97) both;
}

@keyframes blink-animation {
  to {
    border: 4px red solid;
    border-left: 0;
  }
}

@keyframes shake {

  10%,
  90% {
    transform: translate3d(0, -1px, 0);
  }

  20%,
  80% {
    transform: translate3d(0, 2px, 0);
  }

  30%,
  50%,
  70% {
    transform: translate3d(0, -4px, 0);
  }

  40%,
  60% {
    transform: translate3d(0, 4px, 0);
  }
}

#version {
  color: white;
  position: absolute;
  top: 40px;
  right: 8px;
  font-size: 25px;
  text-align: right;
}


#menu input {
  font-family: inherit;
  font-size: inherit;
  -webkit-padding: 0.4em 0;
  padding: 0.4em;
  margin: 0 0 0.5em 0;
  box-sizing: border-box;
  border: 1px solid #ccc;
  border-radius: 2px;
  width: 100%;
}

form {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 250px;
  font-family: sans-serif;
}

#menu {
  /* menu starts out hidden until it is ready (due to it's dependencies) */
  display: none;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

#menu.ready {
  display: flex;
}

#menu.hidden {
  display: none;
}

#menu-inner {
  background-color: cadetblue;
  padding: 16px;
  border-radius: 10px;
  /* Display above card hand */
  z-index: 1;
}

#game-over {
  display: none;
  margin: 0 auto;
  position: absolute;
  width: 200px;
  height: 200px;
  background-color: pink;
  left: 0;
  right: 0;
}

body.view-GameOver #game-over {
  display: block;
}

.prompt {
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  font-size: 24px;
  background-color: rgba(255, 255, 255, 0.4);
}

.prompt-inner {
  background-color: antiquewhite;
  padding: 16px;
  border-radius: 5px;
  max-width: 400px;

}

.prompt .button-holder {
  display: flex;
  justify-content: space-between;
}

/* If prompt only has one button, center it */
.prompt .button-holder .jbutton:first-child:nth-last-child(1) {
  margin: 12px auto;
}

.prompt .text {
  margin: auto 8px;
  white-space: pre-line;
}

.jbutton {
  height: 60px;
  line-height: 40px;
  font-size: 18px;
  border-radius: 8px 8px;
  border: 2px solid black;
  text-align: center;
  position: relative;
  margin: 12px 8px;
  cursor: pointer;
  white-space: nowrap;
  padding: 0 15px;
}

body.view-Game #toolbar {
  display: block;
}

#toolbar {
  display: none;
  position: absolute;
  left: 8px;
  top: 50px;
  z-index: 1;
  color: white;
}

body.auto-camera #center-cam-tooltip {
  display: none;
}

body:not(.auto-camera) #center-cam-info {
  display: none;
}

td:first-child {
  text-align: right;
  border-right: 1px solid white;
  padding-right: 4px;
}

#version-info,
#seed {
  font-size: small;
}

#cookie-consent {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(255, 255, 255, 0.2);
  height: 100vh;
}

#cookie-consent-inner {
  border: 1px solid black;
  padding: 4px;
  background-color: white;
  z-index: 1;
  max-width: 600px;

}

#pie-disconnected {
  display: none;
}

body.view-Disconnected #pie-disconnected {
  display: flex;
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgb(37, 0, 0);
  z-index: 2;
  justify-content: center;
  align-items: center;
  color: white;
}

body.view-Disconnected #websocketpie-connection-status {
  z-index: 1;
  position: absolute;
  top: 52%;
  right: 0;
  bottom: 0;
  left: 0;
  text-align: center;
}

#websocketpie-connection-status {
  z-index: 1;
  position: absolute;
  top: 5px;
  right: 5px;
}

/* Show that camera is being dragged with the mouse */
body.draggingCamera {
  cursor: grabbing;
}

.card.upgrade.chosen {
  opacity: 0.5;
}

.card-common {
  border-image: url('images/card-borders/cardCommonBorder.png') 30 / 1 / 0 stretch;
}

.card-rare {
  border-image: url('images/card-borders/cardRareBorder.png') 30 / 1 / 0 stretch;
}